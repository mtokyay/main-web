{"ast":null,"code":"import { useEffect } from 'react';\nimport useLocalStorageStateBase from './useLocalStorageStateBase';\n/**\n * Used to track usages of `useLocalStorageState()` with identical `key` values. If we encounter\n * duplicates we throw an error to the user telling them to use `createLocalStorageStateHook`\n * instead.\n */\nconst initializedStorageKeys = new Set();\nexport default function useLocalStorageState(key, defaultValue) {\n  const value = useLocalStorageStateBase(key, defaultValue);\n  /**\n   * Detects incorrect usage of the library and throws an error with a suggestion how to fix it.\n   */\n  useEffect(() => {\n    if (initializedStorageKeys.has(key)) {\n      throw new Error(`When using the same key in multiple places use createLocalStorageStateHook('${key}'): ` + `https://github.com/astoilkov/use-local-storage-state#create-local-storage-state-hook`);\n    } else {\n      initializedStorageKeys.add(key);\n    }\n    return () => void initializedStorageKeys.delete(key);\n  }, [key]);\n  return value;\n}","map":{"version":3,"names":["useEffect","useLocalStorageStateBase","initializedStorageKeys","Set","useLocalStorageState","key","defaultValue","value","has","Error","add","delete"],"sources":["/Users/mehmettokyay/Documents/new-theme-react/main-web/node_modules/use-local-storage-state/es/src/useLocalStorageState.js"],"sourcesContent":["import { useEffect } from 'react';\nimport useLocalStorageStateBase from './useLocalStorageStateBase';\n/**\n * Used to track usages of `useLocalStorageState()` with identical `key` values. If we encounter\n * duplicates we throw an error to the user telling them to use `createLocalStorageStateHook`\n * instead.\n */\nconst initializedStorageKeys = new Set();\nexport default function useLocalStorageState(key, defaultValue) {\n    const value = useLocalStorageStateBase(key, defaultValue);\n    /**\n     * Detects incorrect usage of the library and throws an error with a suggestion how to fix it.\n     */\n    useEffect(() => {\n        if (initializedStorageKeys.has(key)) {\n            throw new Error(`When using the same key in multiple places use createLocalStorageStateHook('${key}'): ` +\n                `https://github.com/astoilkov/use-local-storage-state#create-local-storage-state-hook`);\n        }\n        else {\n            initializedStorageKeys.add(key);\n        }\n        return () => void initializedStorageKeys.delete(key);\n    }, [key]);\n    return value;\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,wBAAwB,MAAM,4BAA4B;AACjE;AACA;AACA;AACA;AACA;AACA,MAAMC,sBAAsB,GAAG,IAAIC,GAAG,CAAC,CAAC;AACxC,eAAe,SAASC,oBAAoBA,CAACC,GAAG,EAAEC,YAAY,EAAE;EAC5D,MAAMC,KAAK,GAAGN,wBAAwB,CAACI,GAAG,EAAEC,YAAY,CAAC;EACzD;AACJ;AACA;EACIN,SAAS,CAAC,MAAM;IACZ,IAAIE,sBAAsB,CAACM,GAAG,CAACH,GAAG,CAAC,EAAE;MACjC,MAAM,IAAII,KAAK,CAAE,+EAA8EJ,GAAI,MAAK,GACnG,sFAAqF,CAAC;IAC/F,CAAC,MACI;MACDH,sBAAsB,CAACQ,GAAG,CAACL,GAAG,CAAC;IACnC;IACA,OAAO,MAAM,KAAKH,sBAAsB,CAACS,MAAM,CAACN,GAAG,CAAC;EACxD,CAAC,EAAE,CAACA,GAAG,CAAC,CAAC;EACT,OAAOE,KAAK;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}