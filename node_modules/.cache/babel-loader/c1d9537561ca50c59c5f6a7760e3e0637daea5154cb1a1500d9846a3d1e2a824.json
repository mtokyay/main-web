{"ast":null,"code":"import { useEffect, useMemo } from 'react';\nimport useLocalStorageStateBase from './useLocalStorageStateBase';\nexport default function createLocalStorageStateHook(key, defaultValue) {\n  const setValueFunctions = [];\n  return function useLocalStorageStateHook() {\n    const [value, setValue, isPersistent] = useLocalStorageStateBase(key, defaultValue);\n    const setValueAll = useMemo(() => {\n      const fn = newValue => {\n        for (const setValueFunction of setValueFunctions) {\n          setValueFunction(newValue);\n        }\n      };\n      fn.reset = () => {\n        for (const setValueFunction of setValueFunctions) {\n          setValueFunction.reset();\n        }\n      };\n      return fn;\n    }, []);\n    useEffect(() => {\n      setValueFunctions.push(setValue);\n      return () => void setValueFunctions.splice(setValueFunctions.indexOf(setValue), 1);\n    }, [setValue]);\n    return [value, setValueAll, isPersistent];\n  };\n}","map":{"version":3,"names":["useEffect","useMemo","useLocalStorageStateBase","createLocalStorageStateHook","key","defaultValue","setValueFunctions","useLocalStorageStateHook","value","setValue","isPersistent","setValueAll","fn","newValue","setValueFunction","reset","push","splice","indexOf"],"sources":["/Users/mehmettokyay/Documents/new-theme-react/node_modules/use-local-storage-state/es/src/createLocalStorageStateHook.js"],"sourcesContent":["import { useEffect, useMemo } from 'react';\nimport useLocalStorageStateBase from './useLocalStorageStateBase';\nexport default function createLocalStorageStateHook(key, defaultValue) {\n    const setValueFunctions = [];\n    return function useLocalStorageStateHook() {\n        const [value, setValue, isPersistent] = useLocalStorageStateBase(key, defaultValue);\n        const setValueAll = useMemo(() => {\n            const fn = (newValue) => {\n                for (const setValueFunction of setValueFunctions) {\n                    setValueFunction(newValue);\n                }\n            };\n            fn.reset = () => {\n                for (const setValueFunction of setValueFunctions) {\n                    setValueFunction.reset();\n                }\n            };\n            return fn;\n        }, []);\n        useEffect(() => {\n            setValueFunctions.push(setValue);\n            return () => void setValueFunctions.splice(setValueFunctions.indexOf(setValue), 1);\n        }, [setValue]);\n        return [value, setValueAll, isPersistent];\n    };\n}\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAC1C,OAAOC,wBAAwB,MAAM,4BAA4B;AACjE,eAAe,SAASC,2BAA2BA,CAACC,GAAG,EAAEC,YAAY,EAAE;EACnE,MAAMC,iBAAiB,GAAG,EAAE;EAC5B,OAAO,SAASC,wBAAwBA,CAAA,EAAG;IACvC,MAAM,CAACC,KAAK,EAAEC,QAAQ,EAAEC,YAAY,CAAC,GAAGR,wBAAwB,CAACE,GAAG,EAAEC,YAAY,CAAC;IACnF,MAAMM,WAAW,GAAGV,OAAO,CAAC,MAAM;MAC9B,MAAMW,EAAE,GAAIC,QAAQ,IAAK;QACrB,KAAK,MAAMC,gBAAgB,IAAIR,iBAAiB,EAAE;UAC9CQ,gBAAgB,CAACD,QAAQ,CAAC;QAC9B;MACJ,CAAC;MACDD,EAAE,CAACG,KAAK,GAAG,MAAM;QACb,KAAK,MAAMD,gBAAgB,IAAIR,iBAAiB,EAAE;UAC9CQ,gBAAgB,CAACC,KAAK,CAAC,CAAC;QAC5B;MACJ,CAAC;MACD,OAAOH,EAAE;IACb,CAAC,EAAE,EAAE,CAAC;IACNZ,SAAS,CAAC,MAAM;MACZM,iBAAiB,CAACU,IAAI,CAACP,QAAQ,CAAC;MAChC,OAAO,MAAM,KAAKH,iBAAiB,CAACW,MAAM,CAACX,iBAAiB,CAACY,OAAO,CAACT,QAAQ,CAAC,EAAE,CAAC,CAAC;IACtF,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;IACd,OAAO,CAACD,KAAK,EAAEG,WAAW,EAAED,YAAY,CAAC;EAC7C,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}