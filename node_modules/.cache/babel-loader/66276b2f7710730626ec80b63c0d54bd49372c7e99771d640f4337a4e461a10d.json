{"ast":null,"code":"import { get as t, GLOBAL as o, set as r, remove as e } from \"@analytics/global-storage-utils\";\nexport { GLOBAL, globalContext } from \"@analytics/global-storage-utils\";\nimport { hasCookies as a, COOKIE as l, getCookie as i, setCookie as n, removeCookie as u } from \"@analytics/cookie-utils\";\nexport { COOKIE, getCookie, hasCookies, removeCookie, setCookie } from \"@analytics/cookie-utils\";\nimport { hasLocalStorage as c, LOCAL_STORAGE as s } from \"@analytics/localstorage-utils\";\nexport { LOCAL_STORAGE, hasLocalStorage } from \"@analytics/localstorage-utils\";\nimport { isObject as f, ANY as g, ALL as m, isUndefined as p, isString as v } from \"@analytics/type-utils\";\nexport { ALL, ANY } from \"@analytics/type-utils\";\nfunction y(t) {\n  var o = t;\n  try {\n    if (\"true\" === (o = JSON.parse(t))) return !0;\n    if (\"false\" === o) return !1;\n    if (f(o)) return o;\n    parseFloat(o) === o && (o = parseFloat(o));\n  } catch (t) {}\n  if (null !== o && \"\" !== o) return o;\n}\nvar S = c(),\n  k = a();\nfunction I(o, r) {\n  if (o) {\n    var e = L(r),\n      a = !A(e),\n      l = O(e) ? y(localStorage.getItem(o)) : void 0;\n    if (a && !p(l)) return l;\n    var n = b(e) ? y(i(o)) : void 0;\n    if (a && n) return n;\n    var u = t(o);\n    return a ? u : {\n      localStorage: l,\n      cookie: n,\n      global: u\n    };\n  }\n}\nfunction x(e, a, u) {\n  if (e && !p(a)) {\n    var c = {},\n      f = L(u),\n      g = JSON.stringify(a),\n      m = !A(f);\n    return O(f) && (c[s] = h(s, a, y(localStorage.getItem(e))), localStorage.setItem(e, g), m) ? c[s] : b(f) && (c[l] = h(l, a, y(i(e))), n(e, g), m) ? c[l] : (c[o] = h(o, a, t(e)), r(e, a), m ? c[o] : c);\n  }\n}\nfunction C(t, r) {\n  if (t) {\n    var a = L(r),\n      i = I(t, m),\n      n = {};\n    return !p(i.localStorage) && O(a) && (localStorage.removeItem(t), n[s] = i.localStorage), !p(i.cookie) && b(a) && (u(t), n[l] = i.cookie), !p(i.global) && d(a, o) && (e(t), n[o] = i.global), n;\n  }\n}\nfunction L(t) {\n  return t ? v(t) ? t : t.storage : g;\n}\nfunction O(t) {\n  return S && d(t, s);\n}\nfunction b(t) {\n  return k && d(t, l);\n}\nfunction A(t) {\n  return t === m || \"all\" === t;\n}\nfunction d(t, o) {\n  return t === g || t === o || A(t);\n}\nfunction h(t, o, r) {\n  return {\n    location: t,\n    current: o,\n    previous: r\n  };\n}\nvar N = {\n  setItem: x,\n  getItem: I,\n  removeItem: C\n};\nexport default N;\nexport { I as getItem, C as removeItem, x as setItem };","map":{"version":3,"names":["y","t","o","JSON","parse","f","parseFloat","S","c","k","a","I","r","e","L","A","l","O","localStorage","getItem","p","n","b","i","u","cookie","global","x","g","stringify","m","s","h","setItem","C","removeItem","d","v","storage","location","current","previous","N"],"sources":["/Users/mehmettokyay/Documents/new-theme-react/node_modules/@analytics/storage-utils/src/utils/parse.js","/Users/mehmettokyay/Documents/new-theme-react/node_modules/@analytics/storage-utils/src/index.js"],"sourcesContent":["import { isObject } from '@analytics/type-utils'\n/**\n * Safe JSON parse\n * @param  {*} input - value to parse\n * @return {*} parsed input\n */\nexport default function parse(input) {\n  let value = input\n  try {\n    value = JSON.parse(input)\n    if (value === 'true') return true\n    if (value === 'false') return false\n    if (isObject(value)) return value\n    if (parseFloat(value) === value) {\n      value = parseFloat(value)\n    }\n  } catch (e) { }\n  if (value === null || value === \"\") {\n    return\n  }\n  return value\n}\n","import { set, get, remove, globalContext, GLOBAL } from '@analytics/global-storage-utils'\nimport { getCookie, setCookie, removeCookie, hasCookies, COOKIE } from '@analytics/cookie-utils'\nimport { hasLocalStorage, LOCAL_STORAGE } from '@analytics/localstorage-utils'\nimport { isUndefined, isString, ANY, ALL } from '@analytics/type-utils'\nimport parse from './utils/parse'\n\n// Verify support\nconst hasStorage = hasLocalStorage()\nconst hasCookiesSupport = hasCookies()\n\n/**\n * Get storage item from localStorage, cookie, or window\n * @param  {string} key - key of item to get\n * @param  {object|string} [options] - storage options. If string location of where to get storage\n * @param  {string} [options.storage] - Define type of storage to pull from.\n * @return {Any}  the value of key\n */\nexport function getItem(key, options) {\n  if (!key) return\n  const type = getStorageType(options)\n  const getFirst = !useAll(type)\n\n  /* 1. Try localStorage */\n  const localValue = useLocal(type) ? parse(localStorage.getItem(key)) : undefined\n  if (getFirst && !isUndefined(localValue)) {\n    return localValue\n  }\n\n  /* 2. Fallback to cookie */\n  const cookieVal = useCookie(type) ? parse(getCookie(key)) : undefined\n  if (getFirst && cookieVal) {\n    return cookieVal\n  }\n\n  /* 3. Fallback to window/global. */\n  const globalValue = get(key)\n\n  return getFirst ? globalValue : {\n    localStorage: localValue,\n    cookie: cookieVal,\n    global: globalValue\n  }\n}\n\n/**\n * Store values in localStorage, cookie, or window\n * @param {string} key - key of item to set\n * @param {*} value - value of item to set\n * @param {object|string} [options] - storage options. If string location of where to get storage\n * @param {string} [options.storage] - Define type of storage to pull from.\n * @returns {object} returns old value, new values, & location of storage\n */\nexport function setItem(key, value, options) {\n  if (!key || isUndefined(value)) {\n    return\n  }\n  const data = {}\n  const type = getStorageType(options)\n  const saveValue = JSON.stringify(value)\n  const setFirst = !useAll(type)\n\n  /* 1. Try localStorage */\n  if (useLocal(type)) {\n    // console.log('SET as localstorage', saveValue)\n    data[LOCAL_STORAGE] = format(LOCAL_STORAGE, value, parse(localStorage.getItem(key)))\n    // Set LocalStorage item\n    localStorage.setItem(key, saveValue)\n    if (setFirst) {\n      return data[LOCAL_STORAGE]\n    }\n  }\n\n  /* 2. Fallback to cookie */\n  if (useCookie(type)) {\n    // console.log('SET as cookie', saveValue)\n    data[COOKIE] = format(COOKIE, value, parse(getCookie(key)))\n    // Set Cookie\n    setCookie(key, saveValue)\n    if (setFirst) {\n      return data[COOKIE]\n    }\n  }\n\n  /* 3. Fallback to window/global */\n  data[GLOBAL] = format(GLOBAL, value, get(key))\n  // Set global value\n  set(key, value)\n  // Return set value(s)\n  return (setFirst) ? data[GLOBAL] : data\n}\n\n/**\n * Remove values from localStorage, cookie, or window\n * @param {string} key - key of item to set\n * @param {object|string} [options] - storage options. If string location of where to get storage\n * @param {string} [options.storage] - Define type of storage to pull from.\n */\nexport function removeItem(key, options) {\n  if (!key) return\n  const type = getStorageType(options)\n  const values = getItem(key, ALL)\n\n  const data = {}\n  if (!isUndefined(values.localStorage) && useLocal(type)) {\n    /* 1. Try localStorage */\n    localStorage.removeItem(key)\n    data[LOCAL_STORAGE] = values.localStorage\n  }\n  if (!isUndefined(values.cookie) && useCookie(type)) {\n    /* 2. Fallback to cookie */\n    removeCookie(key)\n    data[COOKIE] = values.cookie\n  }\n  /* 3. Fallback to window/global */\n  if (!isUndefined(values.global) && useGlobal(type)) {\n    remove(key)\n    data[GLOBAL] = values.global\n  }\n  return data\n}\n\nfunction getStorageType(opts) {\n  if (!opts) return ANY\n  return isString(opts) ? opts : opts.storage\n}\n\nfunction useGlobal(storage) {\n  return useType(storage, GLOBAL)\n}\n\nfunction useLocal(storage) {\n  // If has localStorage and storage option not defined, or is set to 'localStorage' or '*'\n  return hasStorage && useType(storage, LOCAL_STORAGE)\n}\n\nfunction useCookie(storage) {\n  // If has cookies and storage option not defined, or is set to 'cookies' or '*'\n  return hasCookiesSupport && useType(storage, COOKIE)\n}\n\nfunction useAll(storage) {\n  return storage === ALL || storage === 'all'\n}\n\nfunction useType(storage, type) {\n  return (storage === ANY || storage === type || useAll(storage))\n}\n\n/**\n * Format response\n * @param {string} location \n * @param {*} current - current value\n * @param {*} previous - previous value\n * @returns \n */\nfunction format(location, current, previous) {\n  return { location, current, previous }\n}\n\n// const TYPES = {\n//   ALL,\n//   ANY,\n//   GLOBAL,\n//   COOKIE,\n//   LOCAL_STORAGE,\n// }\n\nexport {\n  ALL,\n  ANY,\n  GLOBAL,\n  COOKIE,\n  LOCAL_STORAGE,\n  getCookie,\n  setCookie,\n  removeCookie,\n  globalContext,\n  hasLocalStorage,\n  hasCookies\n}\n\nexport default {\n  setItem,\n  getItem,\n  removeItem\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}