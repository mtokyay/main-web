{"ast":null,"code":"/**\n * Abstraction for localStorage that uses an in-memory fallback when localStorage throws an error.\n * Reasons for throwing an error:\n * - maximum quota is exceeded\n * - under Mobile Safari (since iOS 5) when the user enters private mode `localStorage.setItem()`\n *   will throw\n * - trying to access localStorage object when cookies are disabled in Safari throws\n *   \"SecurityError: The operation is insecure.\"\n */\nconst data = {};\nexport default {\n  get(key, defaultValue) {\n    var _a;\n    try {\n      return (_a = data[key]) !== null && _a !== void 0 ? _a : parseJSON(localStorage.getItem(key));\n    } catch (_b) {\n      return defaultValue;\n    }\n  },\n  set(key, value) {\n    try {\n      localStorage.setItem(key, JSON.stringify(value));\n      data[key] = undefined;\n      return true;\n    } catch (_a) {\n      data[key] = value;\n      return false;\n    }\n  },\n  remove(key) {\n    data[key] = undefined;\n    localStorage.removeItem(key);\n  }\n};\n/**\n * A wrapper for `JSON.parse()` which supports the return value of `JSON.stringify(undefined)`\n * which returns the string `\"undefined\"` and this method returns the value `undefined`.\n */\nfunction parseJSON(value) {\n  return value === 'undefined' ? undefined :\n  // JSON.parse() doesn't accept non-string values, this is why we pass empty\n  // string which will throw an error which can be handled\n  JSON.parse(value !== null && value !== void 0 ? value : '');\n}","map":{"version":3,"names":["data","get","key","defaultValue","_a","parseJSON","localStorage","getItem","_b","set","value","setItem","JSON","stringify","undefined","remove","removeItem","parse"],"sources":["/Users/mehmettokyay/Documents/new-theme-react/main-website/node_modules/use-local-storage-state/es/src/storage.js"],"sourcesContent":["/**\n * Abstraction for localStorage that uses an in-memory fallback when localStorage throws an error.\n * Reasons for throwing an error:\n * - maximum quota is exceeded\n * - under Mobile Safari (since iOS 5) when the user enters private mode `localStorage.setItem()`\n *   will throw\n * - trying to access localStorage object when cookies are disabled in Safari throws\n *   \"SecurityError: The operation is insecure.\"\n */\nconst data = {};\nexport default {\n    get(key, defaultValue) {\n        var _a;\n        try {\n            return (_a = data[key]) !== null && _a !== void 0 ? _a : parseJSON(localStorage.getItem(key));\n        }\n        catch (_b) {\n            return defaultValue;\n        }\n    },\n    set(key, value) {\n        try {\n            localStorage.setItem(key, JSON.stringify(value));\n            data[key] = undefined;\n            return true;\n        }\n        catch (_a) {\n            data[key] = value;\n            return false;\n        }\n    },\n    remove(key) {\n        data[key] = undefined;\n        localStorage.removeItem(key);\n    },\n};\n/**\n * A wrapper for `JSON.parse()` which supports the return value of `JSON.stringify(undefined)`\n * which returns the string `\"undefined\"` and this method returns the value `undefined`.\n */\nfunction parseJSON(value) {\n    return value === 'undefined'\n        ? undefined\n        : // JSON.parse() doesn't accept non-string values, this is why we pass empty\n            // string which will throw an error which can be handled\n            JSON.parse(value !== null && value !== void 0 ? value : '');\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,IAAI,GAAG,CAAC,CAAC;AACf,eAAe;EACXC,GAAGA,CAACC,GAAG,EAAEC,YAAY,EAAE;IACnB,IAAIC,EAAE;IACN,IAAI;MACA,OAAO,CAACA,EAAE,GAAGJ,IAAI,CAACE,GAAG,CAAC,MAAM,IAAI,IAAIE,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGC,SAAS,CAACC,YAAY,CAACC,OAAO,CAACL,GAAG,CAAC,CAAC;IACjG,CAAC,CACD,OAAOM,EAAE,EAAE;MACP,OAAOL,YAAY;IACvB;EACJ,CAAC;EACDM,GAAGA,CAACP,GAAG,EAAEQ,KAAK,EAAE;IACZ,IAAI;MACAJ,YAAY,CAACK,OAAO,CAACT,GAAG,EAAEU,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC,CAAC;MAChDV,IAAI,CAACE,GAAG,CAAC,GAAGY,SAAS;MACrB,OAAO,IAAI;IACf,CAAC,CACD,OAAOV,EAAE,EAAE;MACPJ,IAAI,CAACE,GAAG,CAAC,GAAGQ,KAAK;MACjB,OAAO,KAAK;IAChB;EACJ,CAAC;EACDK,MAAMA,CAACb,GAAG,EAAE;IACRF,IAAI,CAACE,GAAG,CAAC,GAAGY,SAAS;IACrBR,YAAY,CAACU,UAAU,CAACd,GAAG,CAAC;EAChC;AACJ,CAAC;AACD;AACA;AACA;AACA;AACA,SAASG,SAASA,CAACK,KAAK,EAAE;EACtB,OAAOA,KAAK,KAAK,WAAW,GACtBI,SAAS;EACT;EACE;EACAF,IAAI,CAACK,KAAK,CAACP,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,CAAC,GAAGA,KAAK,GAAG,EAAE,CAAC;AACvE"},"metadata":{},"sourceType":"module","externalDependencies":[]}